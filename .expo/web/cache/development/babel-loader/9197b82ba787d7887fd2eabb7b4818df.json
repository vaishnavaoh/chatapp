{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/acharya/Downloads/chatapp/components/Start.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Start = function (_React$Component) {\n  _inherits(Start, _React$Component);\n\n  var _super = _createSuper(Start);\n\n  function Start(props) {\n    var _this;\n\n    _classCallCheck(this, Start);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: '',\n      backColor: '#757083'\n    };\n    return _this;\n  }\n\n  _createClass(Start, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var backColor = this.state.backColor;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageBackground, {\n        style: styles.imgBackground,\n        source: require(\"../assets/Background-Image.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, \"Let's Chat\")), React.createElement(View, {\n        style: styles.chatOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.nameInput,\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        value: this.state.name,\n        placeholder: \"Your name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.box,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.backgroundColorText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, \"Choose Background Color:\"), React.createElement(View, {\n        style: styles.backColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.backColor1,\n        onPress: function onPress() {\n          return _this2.setState({\n            backColor: '#090C08'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.backColor2,\n        onPress: function onPress() {\n          return _this2.setState({\n            backColor: '#474056'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.backColor3,\n        onPress: function onPress() {\n          return _this2.setState({\n            backColor: '#8A95A5'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.backColor4,\n        onPress: function onPress() {\n          return _this2.setState({\n            backColor: '#B9C6AE'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }))), React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: backColor,\n          height: 60\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Chat', {\n            name: _this2.state.name,\n            backColor: _this2.state.backColor\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.startText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, \"Start Chatting\")))));\n    }\n  }]);\n\n  return Start;\n}(React.Component);\n\nexport { Start as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  title: {\n    fontSize: 45,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    textAlign: 'center',\n    top: 30,\n    height: 50\n  },\n  main: {\n    flex: 0.50\n  },\n  chatOptions: {\n    flex: 0.40,\n    backgroundColor: 'white',\n    width: '88%',\n    paddingLeft: '5%',\n    paddingRight: '5%',\n    flexDirection: 'column',\n    justifyContent: 'space-around'\n  },\n  nameInput: {\n    height: 60,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderColor: '#757083',\n    borderRadius: 2,\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: '#757083',\n    paddingLeft: '3%'\n  },\n  backgroundColorText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#757083',\n    marginBottom: 10\n  },\n  imgBackground: {\n    width: '100%',\n    height: '100%',\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  startButton: {\n    backgroundColor: '#757083',\n    height: 60\n  },\n  startText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    textAlign: 'center',\n    lineHeight: 60\n  },\n  box: {\n    flexDirection: 'column'\n  },\n  backColor: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  backColor1: {\n    backgroundColor: '#090C08',\n    width: 60,\n    height: 60,\n    borderRadius: 30\n  },\n  backColor2: {\n    backgroundColor: '#474056',\n    width: 60,\n    height: 60,\n    borderRadius: 30\n  },\n  backColor3: {\n    backgroundColor: '#8A95A5',\n    width: 60,\n    height: 60,\n    borderRadius: 30\n  },\n  backColor4: {\n    backgroundColor: '#B9C6AE',\n    width: 60,\n    height: 60,\n    borderRadius: 30\n  }\n});","map":{"version":3,"sources":["/Users/acharya/Downloads/chatapp/components/Start.js"],"names":["React","Start","props","state","name","backColor","styles","container","imgBackground","require","main","title","chatOptions","nameInput","setState","box","backgroundColorText","backColor1","backColor2","backColor3","backColor4","backgroundColor","height","navigation","navigate","startText","Component","StyleSheet","create","flex","flexDirection","fontSize","fontWeight","color","textAlign","top","width","paddingLeft","paddingRight","justifyContent","borderColor","borderWidth","borderRadius","marginBottom","resizeMode","alignItems","startButton","lineHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, TextInput, StyleSheet, ImageBackground, TouchableOpacity } from 'react-native';\n\nexport default class Start extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      backColor: '#757083'\n    }\n  }\n\n  render() {\n    let { backColor } = this.state\n\n    return (\n      <View style={styles.container}>\n        <ImageBackground\n          style={styles.imgBackground}\n          source={require('../assets/Background-Image.png')}\n        >\n          <View style={styles.main}>\n            <Text style={styles.title}>Let's Chat</Text>\n          </View>\n          <View style={styles.chatOptions}>\n            <TextInput\n              style={styles.nameInput}\n              onChangeText={(name) => this.setState({ name })}\n              value={this.state.name}\n              placeholder='Your name'\n            />\n            <View style={styles.box}>\n              <Text\n                style={styles.backgroundColorText}>\n                Choose Background Color:\n              </Text>\n              <View style={styles.backColor}>\n                <TouchableOpacity\n                  style={styles.backColor1}\n                  onPress={() => this.setState({ backColor: '#090C08' })}\n                />\n                <TouchableOpacity\n                  style={styles.backColor2}\n                  onPress={() => this.setState({ backColor: '#474056' })}\n                />\n                <TouchableOpacity\n                  style={styles.backColor3}\n                  onPress={() => this.setState({ backColor: '#8A95A5' })}\n                />\n                <TouchableOpacity\n                  style={styles.backColor4}\n                  onPress={() => this.setState({ backColor: '#B9C6AE' })}\n                />\n              </View>\n            </View>\n            <TouchableOpacity\n              style={{ backgroundColor: backColor, height: 60, }}\n              onPress={() => this.props.navigation.navigate('Chat', { name: this.state.name, backColor: this.state.backColor })}\n            >\n              <Text style={styles.startText}>Start Chatting</Text>\n            </TouchableOpacity>\n          </View>\n        </ImageBackground>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n\n  },\n  title: {\n    fontSize: 45,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    textAlign: 'center',\n    top: 30,\n    height: 50,\n  },\n  main: {\n    flex: 0.50,\n  },\n  chatOptions: {\n    flex: 0.40,\n    backgroundColor: 'white',\n    width: '88%',\n    paddingLeft: '5%',\n    paddingRight: '5%',\n    flexDirection: 'column',\n    justifyContent: 'space-around'\n  },\n  nameInput: {\n    height: 60,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderColor: '#757083',\n    borderRadius: 2,\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: '#757083',\n    paddingLeft: '3%',\n  },\n  backgroundColorText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#757083',\n    marginBottom: 10,\n  },\n  imgBackground: {\n    width: '100%',\n    height: '100%',\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  startButton: {\n    backgroundColor: '#757083',\n    height: 60,\n  },\n  startText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    textAlign: 'center',\n    lineHeight: 60,\n  },\n  box: {\n    flexDirection: 'column'\n  },\n  backColor: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  backColor1: {\n    backgroundColor: '#090C08',\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n  },\n  backColor2: {\n    backgroundColor: '#474056',\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n  },\n  backColor3: {\n    backgroundColor: '#8A95A5',\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n  },\n  backColor4: {\n    backgroundColor: '#B9C6AE',\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n  },\n})"]},"metadata":{},"sourceType":"module"}