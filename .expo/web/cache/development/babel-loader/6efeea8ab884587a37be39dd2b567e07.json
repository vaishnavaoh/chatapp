{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/acharya/Downloads/chatapp/components/Chat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\n\nvar firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this, props);\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text,\n          createdAt: data.createdAt.toDate(),\n          user: data.user\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    var firebaseConfig = {\n      apiKey: \"AIzaSyBzgzly2-WlVIUxnd9SVwRPx7IwIrXJC28\",\n      authDomain: \"task-5-cf.firebaseapp.com\",\n      projectId: \"task-5-cf\",\n      storageBucket: \"task-5-cf.appspot.com\",\n      messagingSenderId: \"1003503703326\",\n      appId: \"1:1003503703326:web:a5dcf6718276f576f3e50f\"\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    ;\n    _this.referenceChatMessages = firebase.firestore().collection(\"messages\");\n    _this.state = {\n      messages: [],\n      uid: 0,\n      backColor: _this.props.route.params.backColor\n    };\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var name = this.props.route.params.name;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      this.authUnsubscribe = firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          firebase.auth().signInAnonymously();\n        }\n\n        _this2.setState({\n          uid: user.uid,\n          messages: []\n        });\n\n        _this2.unsubscribe = _this2.referenceChatMessages.orderBy(\"createdAt\", \"desc\").onSnapshot(_this2.onCollectionUpdate);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage() {\n      var message = this.state.messages[0];\n      this.referenceChatMessages.add({\n        _id: message._id,\n        createdAt: message.createdAt,\n        text: message.text,\n        user: message.user\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this3 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      }, function () {\n        _this3.addMessage();\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      var backColor = this.state.backColor;\n\n      if (backColor === '#090C08' || backColor === '#474056') {\n        return React.createElement(Bubble, _extends({}, props, {\n          wrapperStyle: {\n            right: {\n              backgroundColor: '#bcb8b1'\n            }\n          },\n          textProps: {\n            style: {\n              color: 'black'\n            }\n          },\n          timeTextStyle: {\n            right: {\n              color: 'black'\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }\n        }));\n      } else {\n        return React.createElement(Bubble, _extends({}, props, {\n          wrapperStyle: {\n            right: {\n              backgroundColor: 'black'\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: this.state.backColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, React.createElement(GiftedChat, {\n        renderBubble: this.renderBubble.bind(this),\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this4.onSend(messages);\n        },\n        user: {\n          _id: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }), Platform.OS === 'android' ? React.createElement(KeyboardAvoidingView, {\n        behavior: \"height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 39\n        }\n      }) : null);\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };","map":{"version":3,"sources":["/Users/acharya/Downloads/chatapp/components/Chat.js"],"names":["React","GiftedChat","Bubble","firebase","require","Chat","props","onCollectionUpdate","querySnapshot","messages","forEach","doc","data","push","_id","text","createdAt","toDate","user","setState","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","referenceChatMessages","firestore","collection","state","uid","backColor","route","params","name","navigation","setOptions","title","authUnsubscribe","auth","onAuthStateChanged","signInAnonymously","unsubscribe","orderBy","onSnapshot","message","add","previousState","append","addMessage","right","backgroundColor","style","color","flex","renderBubble","bind","onSend","Platform","OS","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Platform, KeyboardAvoidingView, Text } from 'react-native'\n\n//Gifted Chat library\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\n\n//Firebase collection\nconst firebase = require('firebase');\nrequire('firebase/firestore');\n\n\nexport default class Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    const firebaseConfig = {\n      apiKey: \"AIzaSyBzgzly2-WlVIUxnd9SVwRPx7IwIrXJC28\",\n      authDomain: \"task-5-cf.firebaseapp.com\",\n      projectId: \"task-5-cf\",\n      storageBucket: \"task-5-cf.appspot.com\",\n      messagingSenderId: \"1003503703326\",\n      appId: \"1:1003503703326:web:a5dcf6718276f576f3e50f\",\n    };\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    };\n    this.referenceChatMessages = firebase.firestore().collection(\"messages\");\n    this.state = {\n      messages: [],\n      uid: 0,\n      backColor: this.props.route.params.backColor\n    };\n  }\n\n  componentDidMount() {\n    let { name } = this.props.route.params;\n    this.props.navigation.setOptions({ title: name });\n    this.authUnsubscribe = firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        firebase.auth().signInAnonymously();\n      }\n      this.setState({\n        uid: user.uid,\n        messages: [],\n      });\n      this.unsubscribe = this.referenceChatMessages\n        .orderBy(\"createdAt\", \"desc\")\n        .onSnapshot(this.onCollectionUpdate);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  addMessage() {\n    const message = this.state.messages[0];\n    this.referenceChatMessages.add({\n      _id: message._id,\n      createdAt: message.createdAt,\n      text: message.text,\n      user: message.user,\n    });\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const messages = [];\n    querySnapshot.forEach((doc) => {\n      let data = doc.data();\n      messages.push({\n        _id: data._id,\n        text: data.text,\n        createdAt: data.createdAt.toDate(),\n        user: data.user,\n      });\n    });\n    this.setState({\n      messages,\n    })\n  }\n\n  onSend(messages = []) {\n    this.setState(previousState => ({\n      messages: GiftedChat.append(previousState.messages, messages),\n    }),\n      () => {\n        this.addMessage();\n      }\n    );\n  }\n\n  renderBubble(props) {\n    let backColor = this.state.backColor;\n    if (backColor === '#090C08' || backColor === '#474056') {\n      return (\n        <Bubble\n          {...props}\n          wrapperStyle={{\n            right: {\n              backgroundColor: '#bcb8b1'\n            }\n          }}\n          textProps={{\n            style: { color: 'black' }\n          }}\n          timeTextStyle={{ right: { color: 'black' } }}\n        />\n      )\n    } else {\n      return (\n        <Bubble\n          {...props}\n          wrapperStyle={{\n            right: {\n              backgroundColor: 'black'\n            }\n          }}\n        />\n      )\n    }\n  }\n\n\n  render() {\n    return (\n      <View style={{ flex: 1, backgroundColor: this.state.backColor }}>\n        <GiftedChat\n          renderBubble={this.renderBubble.bind(this)}\n          messages={this.state.messages}\n          onSend={messages => this.onSend(messages)}\n          user={{\n            _id: 1,\n          }}\n        />\n        { Platform.OS === 'android' ? <KeyboardAvoidingView behavior=\"height\" /> : null}\n      </View>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}